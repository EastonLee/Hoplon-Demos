(ns petrol-examples.spotify.view
  (:require [petrol.core :refer [send! send-value!]]
            [petrol-examples.spotify.messages :as m]))

(defn- get-track-image-url
  [track]
  (-> track :album :images first :url))

(defn- track-view
  [track]
  (cell= (prn :preview (:preview_url track)))
  (div :class "thumbnail"
    (img
      :class "img-responsive"
      :toggle (cell= (get-track-image-url track))
      :alt (cell= (:name track))
      :src (cell= (get-track-image-url track)))
    (div :class "caption"
      (audio
        :src (cell= (:preview_url track))
        :css (cell= {:display (if (:preview_url track)
                                "inline-block"
                                "none")})
        :controls "controls")
      (h4 (text "~(:name track)")))))

(defn- search-form
  [ui-channel term]
  (div
    (input
      :type :text
      :placeholder "Song name..."
      :value term
      :change (send-value! ui-channel m/->ChangeSearchTerm))
    (button :class "btn btn-success"
      :click (send! ui-channel (m/->Search))
      "Go")))

(defn root
  [ui-channel app]
  (div
    :css {:display "flex"
          :flex-direction "column"
          :align-items "center"}
    (h1 "Simple Spotify Client")
   (search-form ui-channel (cell= (:term app)))
   (div
     (loop-tpl :bindings [track (cell= (:tracks app))]
       (div :css {:height "420px"
                  :float "left"
                  :margin "20px"
                  :width "330px"}
         (track-view track))))))

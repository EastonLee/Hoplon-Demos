(ns petrol-examples.multicounters.view
  (:require
    [petrol.core :refer [send!]]
    [hoplon.petrol :refer [forward]]
    [petrol-examples.multicounters.messages :as m]
    [petrol-examples.counter2.view :as counter2]))

(defn counter-container
  [ui-channel index counter]
  (div :class "col-xs-12 col-sm-4"
    (counter2/root (forward (partial m/->UpdateCounter index) ui-channel) counter)
    (button
      :class "btn btn-info"
      :click (send! ui-channel (m/->DelCounter index))
      "Delete counter")))

(defn root
  [ui-channel app]
  (div :class "container"
    (h1
      "Multiple Counters: " (text "~(count (:counters app))"))
    (div
      (button :class "btn btn-info"
        :click (send! ui-channel (m/->AddCounter))
        "Add counter"))
    (div :class "row"
      (loop-tpl :bindings [[i c] (cell= (map-indexed list (:counters app)))]
        (counter-container ui-channel i c)))))
